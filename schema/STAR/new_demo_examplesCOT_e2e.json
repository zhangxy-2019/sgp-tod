[
  {
    "domains": "ride",
    "tasks": "ride_book",
    "instructions": "belief instruction: wizard needs to request the customer name, departure location, arrival location sequentially before querying: CustomerName = John, Angela, Alexis, etc.; DepartureLocation = Airport, 5th and Main, Forbes and Murray, etc.; ArrivalLocation = 5th and Main, University, Hospital, etc.; RequestType = Check, Book.",
    "task_rules":  "(1) [user] [RESULT] APIName = ride_book ; AllowsChanges = [BOOLEAN] ; ArrivalLocation = [LOCATION] ; CarModel = [CAR_MODEL] ; CustomerName = [NAME] ; DepartureLocation = [LOCATION] ; DriverName = [NAME] ; LicensePlate = [PLATE] ; MinutesTillPickup = [NUMBER] ; Price = [NUMBER] ; ServiceProvider = [PROVIDER] ; id = [NUMBER] ;  [SEP] action: 37:ride_ask_confirm_booking [wizard] I found a {service_provider:s} ride for you from '{departure_location:s}' to '{arrival_location:s}' for {price:d} credits\nthat could pick you up in {minutes_till_pickup:d} minutes. Should I book that for you? [eos] (2) [user] Yes, please book the ride [SEP] action: 11:query_book[eos] (3) [user] No, don't book it [SEP] action: 140:ride_inform_search_criteria [wizard] I can also filter for service provider, driver name, and the carâ€™s model.[eos] (4) [user] [RESULT] APIName = ride_book ; Message = Ride booked. ;  [SEP] action: 38:ride_confirm_booking [wizard] Ok, I have booked you a ride with licence plate '{license_plate:s}'. Your booking ID is '{booking_id:d}'.[eos]",
    "dialog_examples": "history: [wizard] i found a uber ride for you from '5th and main' to 'airport' for 46 credits that could pick you up in 28 minutes. should i book that for you? [sep] [user] yes please. [sep] [wizard] [query] customername = \"alexis\" ; departurelocation = \"5th and main\" ; arrivallocation = \"airport\" ; requesttype = \"book\" ; [sep] [knowledgebase] [result] apiname = ride_book ; message = ride booked. ; [sep]",
    "extra_ex":"select * from ride_book where none",
    "explanation": "(4) [user] [result] apiname = ride_book ; message = ride booked. ;[sep] action: 38:ride_confirm_booking [wizard] Ok, I have booked you a ride with licence plate '{license_plate:s}'. Your booking ID is '{booking_id:d}'.[eos]"
  },
  {
    "domains": "ride",
    "tasks": "ride_change",
    "instructions": "wizard needs to request the user's name, ride id, change description before querying.",
    "task_rules": "(1) [user] I would like to change my ride [SEP] action: 2:ask_name [wizard] Could you give me your name, please? [eos] (2) [user] My name is [NAME] [SEP] action: 123:ride_ask_booking_number [wizard] Can I get your booking ID, please? [eos] (3) [user] My booking ID is [NUMBER] [SEP] action: 127:ride_ask_change [wizard] Sure, what can I change for you? [eos] (4) [user] I would like to change [MESSAGE] [SEP] action: 6:query[eos]",
    "dialog_examples": "history: [user] i'm ben! [sep] [wizard] can i get your booking id, please? [sep] [user] 124 [sep]",
    "extra_ex": "user's name is ben, booking id is 124. thus, the answer is",
    "explanation": "(3) [user] my booking id is [number] [sep] action: 127:ride_ask_change [wizard] Sure, what can I change for you?[eos]"
  },
  {
    "domains": "ride",
    "tasks": "ride_status",
    "instructions": "wizard needs to request the user's name and ride ID before querying.",
    "task_rules": "(1) [user] I'd like to find out the status of my ride [SEP] action: 2:ask_name [wizard] May I have your name, please?[eos] (2) [user] My name is [NAME] [SEP] action: 123:ride_ask_booking_number [wizard] Could you provide your booking ID, please?[eos] (3) [user] My ride ID is [NUMBER] [SEP] action: 6:query[eos] (4) [user] i'm [NAME], my ride id is [NUMBER] [SEP] action: 6:query[eos]",
    "dialog_examples": "history: [user] hi my ride id is 562. name angela. where is my ride [SEP]",
    "extra_ex": "user's name is angela, ride id is 562. thus, the answer is",
    "explanation": "(4) [user] i'm [NAME], my ride id is [NUMBER] [SEP] action: 6:query [eos]"
  },
  {
    "domains": "trip",
    "tasks": "trip_directions",
    "instructions": "wizard needs to request the travek mode (drive, walk, or use public transit), departure location, arrival location, departure time before querying.",
    "task_rules": "(1) [user] [RESULT] APIName = trip_directions ; DetailedTransitInstructions = [DIRECTIONS] ; TransitInstructions = [DIRECTIONS] ; TravelMode = Transit; TripLengthMinutes = [NUMBER] ; id = [NUMBER] ; [SEP] action: 72:trip_inform_simple_step_ask_proceed [wizard] {simple_instruction:s} Can I proceed or do you require more detailed instructions?[eos] (2) [user] Yes, continue [SEP] action: 72:trip_inform_simple_step_ask_proceed [wizard] {simple_instruction:s} Can I proceed or do you require more detailed instructions?[eos] (3) [user] Ok [SEP] action: 72:trip_inform_simple_step_ask_proceed [wizard] {simple_instruction:s} Can I proceed or do you require more detailed instructions?[eos] (4) [user] No, can I get detailed instructions? [SEP] action: 105:trip_inform_detailed_step [wizard] {detailed_instruction:s} [eos] (5) [user] proceed. / what's the next diection? [SEP] action: 82:trip_inform_last_step_and_done [wizard] {simple_instruction:s} Do you know how to reach your destination or would you require more detailed instructions?[eos]",
    "dialog_examples": "history: [user] go ahead [sep] [wizard] after 5 kilometers, turn right on castro st. can i proceed or do you require more detailed instructions? [sep] [user] go ahead [sep]",
    "extra_ex": "user asks to go ahead / proceed. thus, the answer is",
    "explanation": "(2) [user] Yes, continue [sep] action: 72:trip_inform_simple_step_ask_proceed [wizard] {simple_instruction:s} Can I proceed or do you require more detailed instructions?[eos]"
  },
  {
    "domains": "doctor",
    "tasks": "doctor_schedule",
    "instructions": "belief instruction: wizard needs to request the patient name, doctor name, day, start time, symptoms sequentially before querying: patientname = alexis, mark, ben, etc.; doctorname = dr. johnson, dr. alexis, etc.; day = monday, saturday, etc.; starttimehour = 1 pm, 2pm ; symptoms = headache, dizziness and muscle weakness ; requesttype = check, book.",
    "task_rules": " (1) [user] I would like to schedule a doctor's appointment [SEP] action: 2:ask_name [wizard] could I have your name, please? (2) [user] My name is [NAME]. [SEP] action: 64:doctor_ask_doctor_name [wizard] what doctor would you like to see?[eos] (3) [user] My doctor's name is Dr. [NAME] [SEP] action: 65:doctor_ask_day [wizard] What day of the week would you like to schedule the appointment for? [eos] (4) [user] [DAY_OF_WEEK] [SEP] action: 120:doctor_ask_start_time[eos] [wizard] At what time can you be at the clinic? (5) [user] [TIME] [SEP] action: 66:doctor_ask_symptoms [wizard] Could you describe your symptoms, please? [eos]",
    "dialog_examples": "history: [user] hello! [sep] [wizard] hello, how can i help? [sep] [user] i want to make an appointment with dr morgan on saturday at 8 pm. my name is alexis. [sep]",
    "extra_ex": "select * from doctor_schedule where patientname = alexis; doctorname = dr morgan; day = saturday; starttimehour = 8 pm",
    "explanation": "(5) [user] [TIME] [SEP] action: 66:doctor_ask_symptoms [wizard] Could you describe your symptoms, please? [eos]"
  },
  {
    "domains": "weather",
    "tasks": "weather",
    "instructions": "wizard needs to request the day (optinally city/location) before querying.",
    "task_rules": "(1) [user] What is the weather like? [SEP] action: 85:weather_ask_day [wizard] For what day would you like the weather forecast? [eos] (2) [user] On [DAY_OF_WEEK] [SEP] action: 5:weather_ask_location [wizard] For what location would you like the weather forecast?[eos] (3) [user] [CITY] [SEP] action: 6:query[eos] (4) [user] [RESULT] APIName = weather ; City = [CITY] ; Day = [DAY_OF_WEEK] ; TemperatureCelsius = [NUMBER] ; Weather = [WEATHER]; id = [NUMBER] ;  [SEP] action: 7:weather_inform_forecast [wizard] It will be {weather:s} all day on {day:s} in {city:s}, with temperatures of around {temperature:d} degrees celsius.[eos]",
    "dialog_examples": "history: [user] i want to know the weather for tuesday. [SEP] [wizard] for what location would you like the weather forecast? [SEP] [user] chicago [SEP]",
    "extra_ex": "weather day is tuesday, city/location is chicago. thus, the answer is",
    "explanation": "(3) [user] [CITY] [SEP] action: 6:query[eos]"
  },
  {
    "domains": "party",
    "tasks": "party_plan",
    "instructions": "wizard needs to request the venue name, host name, day, start time, number of guests (optinally food request, drinks request) before querying.",
    "task_rules": "(1) [user] Starting at [TIME] [SEP] action: 8:party_ask_number_of_guests [wizard] How many people would you like to invite?[eos] (2) [user] I would like to have [NUMBER] guests [SEP] action: 99:party_inform_food_drink_criteria [wizard] Would you like to order any specific kinds of food or drinks for your party?[eos] (3) [user] For drinks I would like [MESSAGE] [SEP] action: 9:query_check[eos] (4) [user] For food I would like [MESSAGE] [SEP] action: 9:query_check[eos] (5) [user] For food I would like [MESSAGE] and for drinks I would like [MESSAGE] [SEP] action: 9:query_check[eos]",
    "dialog_examples": "history: [user] i am hosting as alexis and the southside venue for thursday at 3pm would be great. [SEP] [wizard] how many people would you like to invite? [SEP] [user] well atleast 20 guest will be coming and we like vegetarian meals only, please. [SEP]",
    "extra_ex": "venue name is the southside venue, host name is alexis, day is thursday, start time is 3pm, number of guests is 20, food request is vegetarian meals. thus, the answer is",
    "explanation": "(4) [user] For food I would like [MESSAGE] [SEP] action: 9:query_check[eos]"
  },
  {
    "domains": "doctor",
    "tasks": "doctor_followup",
    "instructions": "wizard needs to request the user's name and doctor name before querying.",
    "task_rules": "(1)[user] I'd like to follow up on my doctors appointment [SEP] action: 2:ask_name [wizard] Could I get your name, please?[eos] (2) [user] My name is [NAME] [SEP] action: 64:doctor_ask_doctor_name [wizard] Who is your doctor?[eos] (3) [user] My doctor's name is [NAME] [SEP] action: 6:query[eos] (4) [RESULT] APIName = doctor_followup ; Message = [MESSAGE] ;  [SEP] action: 104:doctor_inform_doctors_instructions [wizard] Your instructions are: {instructions:s}.[eos]",
    "dialog_examples": "history: [user] i just finished up an appointment with dr. alexis and i need to check in because i don't think i totally understand everyting. [SEP] [wizard] could i get your name, please? [SEP] [user] yes my name is angela. [SEP]",
    "extra_ex": "user's name is angela, doctor's name is dr.alexis. thus, the answer is",
    "explanation": "(3)[user] My doctor's name is [NAME] [SEP] action: 6:query[eos]"
  },
  {
    "domains": "spaceship",
    "tasks": "spaceship_access_codes",
    "instructions": "wizard needs to request user's name, user's rank, code, code type before querying.",
    "task_rules": "(1) [user] My rank is [RANK] [SEP] action: 94:spaceship_ask_code [wizard] Please enter the code.[eos] (2) [user] [NUMBER] [SEP] action: 95:spaceship_ask_code_type [wizard] Please specify the code type.[eos] (3) [user] It's an access code [SEP] action: 6:query[eos] (4) [user] It's a clearance code [SEP] action: 6:query[eos]",
    "dialog_examples": "history: [User] I am the Bartender [Wizard] Please enter the code. [User] 031431[SEP]",
    "extra_ex": "user's rank is bartender, code is 031431. thus, the answer is",
    "explanation": "(2) [user] [NUMBER] [SEP] action: 95:spaceship_ask_code_type [wizard] Please specify the code type.[eos]"
  },
  {
    "domains": "none",
    "tasks": "trivia",
    "instructions": "wizard needs to request the question number to start from, before querying.",
    "task_rules": "(1) [user] [RESULT] APIName = trivia ; Answer = [ANSWER] ; Question = [QUESTION] ;  [SEP] action: 34:trivia_ask_question [wizard] {question:s}[eos] (2) [user] My answer is [ANSWER] [SEP] action: 55:trivia_inform_answer_correct_ask_next [wizard] Your answer was correct! Great job! Would you like to continue playing?[eos] (3) [user] My answer is [WRONG_ANSWER] [SEP] action: 33:trivia_inform_answer_incorrect_ask_next [wizard] Unfortunately your answer was wrong. '{answer:s}' would have been correct.\nWould you like to continue playing?[eos] (4) [user] I don't know [SEP] action: 35:trivia_inform_answer_2_ask_next [wizard] The answer to this question would have been '{answer:s}'. Would you like to continue playing?[eos]",
    "dialog_examples": "history: [knowledgebase] [result] apiname = trivia ; answer = snail ; question = a ____ takes 33 hours to crawl one mile ; [SEP] [wizard] a ____ takes 33 hours to crawl one mile [SEP] [user] turtle [SEP]",
    "extra_ex": "the claim that a turtle tasks 33 hours to crawl one mile is wrong. thus, the answer is",
    "explanation": "(3) [user] My answer is [WRONG_ANSWER] [SEP] action: 33:trivia_inform_answer_incorrect_ask_next [wizard] Unfortunately your answer was wrong. '{answer:s}' would have been correct.\nWould you like to continue playing?[eos]"
  },
  {
    "domains": "meeting",
    "tasks": "meeting_schedule",
    "instructions": "wizard needs to request the user's name, meeting guest name, day, start time, end time (optionally meeting reason) before querying.",
    "task_rules": "(1) [user] [DAY_OF_WEEK] [SEP] action: 155:meeting_ask_start_time [wizard] For what time should the meeting be scheduled?[eos] (5) [user] Start at [TIME] [SEP] action: 61:meeting_ask_end_time [wizard] When do you expect the meeting to wrap up?[eos] (6) [user] End at [TIME] [SEP] action: 108:meeting_ask_reason [wizard] Would you like to note down an optional reason for the meeting?[eos] (4) [user] The reason for the meeting is [MESSAGE] [SEP] action: 6:query[eos]",
    "dialog_examples": "history: [user] it should only be about 2 hours, so around 4 pm. [SEP] [wizard] would you like to note down an optional reason for the meeting? [SEP] [user] yes, put it down as \"weekly scrum planning\" [SEP]",
    "extra_ex": "meeting end time is around 4pm, meeting reason is weekly scrum planning. thus, the answer is",
    "explanation": "(4) [user] The reason for the meeting is [MESSAGE] [SEP] action: 6:query[eos]"
  },
  {
    "domains": "hotel",
    "tasks": "hotel_book",
    "instructions": "wizard needs to request the user's name, hotel name, start date, end date, and customer request before querying.",
    "task_rules": "(1) [user] I'd like to make a reservation at a hotel. [SEP] action: 2:ask_name [wizard] May I have your name, please?[eos] (2) [user] My name is [NAME]. [SEP] action: 22:hotel_ask_hotel [wizard] What hotel would you like to stay at?[eos] (3) [user] I'd like to stay at the [HOTEL_NAME] [SEP] action: 73:hotel_ask_date_from [wizard] When are you arriving?[eos] (4) [user] I'll arrive on [DATE] [SEP] action: 118:hotel_ask_date_to [wizard] When will you be leaving again?[eos]",
    "dialog_examples": "history: [user] hi [SEP] [wizard] hello, how can i help? [SEP] [user] i would like to reserve a room at the ond town inn [SEP]",
    "extra_ex": "hotel name is ond town inn, user asks for a reservation. thus, the answer is",
    "explanation": "(1) [user] I'd like to make a reservation at a hotel. [SEP] action: 2:ask_name [wizard] May I have your name, please?[eos]"
  },
  {
    "domains": "restaurant",
    "tasks": "restaurant_book",
    "instructions": "wizard needs to request the user's name, restaurant name, time and the number of people before querying.",
    "task_rules": "(1) [user] I would like to make a reservation at a restaurant [SEP] action: 2:ask_name [wizard] May I have your name, please?[eos] (2) [user] My name is [NAME] [SEP] action: 17:restaurant_ask_restaurant [wizard] What restaurant would you like to go to?[eos] (3) [user] The name of the restaurant is [RESTAURANT_NAME] [SEP] action: 44:restaurant_ask_time [wizard] For what time should the reservation be made?[eos] (4) [user] At [TIME] [SEP] action: 18:restaurant_ask_size [wizard] For how many people should the reservation be made?[eos] (5) [user] [NUMBER] people [SEP] action: 9:query_check[eos]",
    "dialog_examples": "history: [user] hello, i'd like to make a reservation at the porch for 37 people at 12 pm. my name is angela. [SEP]",
    "extra_ex": "user's name is angela, restaurant name is porch, time is 12pm, number of people is 37. thus, the answer is",
    "explanation": "(5) [user] [NUMBER] people [SEP] action: 9:query_check[eos]"
  },
  {
    "domains": "restaurant",
    "tasks": "restaurant_search",
    "instructions": "wizard needs to request the name, location, food type, cost, rating, whether delivery, whether taking reservations before querying.",
    "task_rules": "(1) [user] i want to find an expensive/cheap restaurant [SEP] action: 17:restaurant_ask_restaurant [wizard] What restaurant would you like to go to?[eos] (2) [user] i need info on [RESTAURANT_NAME] [SEP] action: 131:restaurant_ask_location [wizard] In what part of town should the restaurant be located?[eos] (3) [user] i am looking for [RESTAURANT_NAME] near [RESTAURANT_LOCATION] [SEP] action: 130:restaurant_ask_food_type [wizard] What cuisine are you looking for?[eos] (4) [user] the rating is [NUMBER] star [SEP] action: 132:restaurant_ask_delivery [wizard] Are you looking for a restaurant that offers a delivery service?[eos] (5) [user] i am looking for [FOOD_TYPE] [SEP] action: 137:restaurant_ask_rating [wizard] Any minimum rating that the restaurant should have?[eos]",
    "dialog_examples": "history: [user] andrew [SEP] [wizard] what cuisine are you looking for? [SEP] [user] i am open to anything [SEP]",
    "extra_ex": "user's name is andrew, food type is anything. thus, the answer is",
    "explanation": "(5) [user] i am looking for [FOOD_TYPE] [SEP] action: 137:restaurant_ask_rating [wizard] Any minimum rating that the restaurant should have?[eos]"
  },
  {
    "domains": "apartment",
    "tasks": "apartment_schedule",
    "instructions": "wizard needs to request the user's name, apartment name, day, start time (hour), whether application fee is paid (optionally custom message) before querying.",
    "task_rules": "(1) [user] [TIME] [SEP] action: 47:apartment_ask_application_fee_paid [wizard] Have you already paid the application fee for the apartment?[eos] (2) [user] i paid the fee already./not yet. [SEP] action: 9:query_check[eos] (3) [user] [BOOLEAN] [SEP] action: 154:apartment_ask_custom_message [wizard] Would you like to add a message for the letting agency?[eos] (4) [user] [MESSAGE] [SEP] action: 9:query_check[eos]",
    "dialog_examples": "history: [user] 11 am would be good [SEP] [wizard] have you already paid the application fee for the apartment? [SEP] [user] no not yet [SEP]",
    "extra_ex": "start time is 11 am, user has not paid the application fee yet. thus, the answer is",
    "explanation": "(2) [user] i paid the fee already./not yet. [SEP] action: 9:query_check[eos]"
  },
  {
    "domains": "party",
    "tasks": "party_rsvp",
    "instructions": "wizard needs to request the venue name, host name, guest name, arrival time, the number of guests with them, and whether needing parking (optionally dietary restrictions) before querying.",
    "task_rules": "(1) [user] I would like to RSVP to a party [SEP] action: 1:party_ask_venue [wizard] At what venue is the party taking place?[eos] (2) [user] [VENUE_NAME] [SEP] action: 87:party_ask_host [wizard] Could you provide me with the name of the host, please?[eos] (3) [user] The party is hosted by [NAME] [SEP] action: 2:ask_name [wizard] May I have your name, please?[eos] (4) [user] My name is [NAME] [SEP] action: 88:party_ask_arrival_time [wizard] When are you planning to arrive at the party?[eos]",
    "dialog_examples": "history: [user] i would like to rsvp to a party [SEP] [wizard] at what venue is the party taking place? [SEP] [user] the venue is southside venue [SEP]",
    "extra_ex": "venue name is southside venue. thus, the answer is",
    "explanation": "(2) [user] [VENUE_NAME] [SEP] action: 87:party_ask_host [wizard] Could you provide me with the name of the host, please?[eos]"
  },
  {
    "domains": "plane",
    "tasks": "plane_search",
    "instructions": "wizard needs to request the departure city, arrival city and date sequentially (optionally airline, class, price, duration) before querying.",
    "task_rules": "(1) [user] Thanks [SEP] action: 153:plane_ask_more_questions [wizard] Would you like to search for any more flights?[eos] (2) [user] Yes, keep searching [SEP] action: 6:query[eos] (3) [user] No, that's fine [SEP] action: 13:anything_else [wizard] Is there anything else that I can do for you?[eos] (4) [user] Goodbye/ no, that's it. thanks [SEP] action: 30:goodbye_2[eos]",
    "dialog_examples": "history: [user] i guess i'll take it. book the business class seat please. [SEP] [wizard] is there anything else that i can do for you? [SEP] [user] no, that's it. thank you. [SEP]",
    "extra_ex": "user informs nothing else, thus, the answer is",
    "explanation": "(4) [user] Goodbye/ no, that's it. thanks [SEP] action: 30:goodbye_2[eos]"
  },
  {
    "domains": "bank",
    "tasks": "bank_balance",
    "instructions": "wizard needs to request the user's name, account number, PIN sequentially before querying.",
    "task_rules": "(1) [user] Hello. [SEP] action: 0:hello [wizard] Hello, how can I help?[eos] (2) [user] Can I see my bank balance? [SEP] action: 2:ask_name [wizard] Could I get your full name, please?[eos] (3) [user] My name is [NAME] [SEP] action: 40:bank_ask_account_number [wizard] Can you tell me your account number, please?[eos] (4) [user] My account nubmer is [NUMBER] [SEP] action: 42:bank_ask_pin [wizard] Right, and your PIN as well please.[eos]",
    "dialog_examples": "history: [user] hello, can you help me check my balance? my name is brian white. [SEP]",
    "extra_ex": "user's name is brian white. thus, the answer is",
    "explanation": "(3) [user] My name is [NAME] [SEP] action: 40:bank_ask_account_number [wizard] Can you tell me your account number, please?[eos]"
  },
  {
    "domains": "hotel",
    "tasks": "hotel_search",
    "instructions": "wizard needs to collect the hotel name, hotel location, price and rating sequentially from the user before conducting database querying.",
    "task_rules": "(1) [user] [RESULT] APIName = hotel_search ; AverageRating = [NUMBER] ; Cost = [PRICE] ; Location = [LOCATION] ; Name = [HOTEL_NAME] ; Service = [BOOLEAN] ; TakesReservations = [BOOLEAN] ; id = [NUMBER] ;  [SEP] action: 83:hotel_provide_search_result [wizard] OK, I have found the '{hotel_name:s}', located {hotel_location:s}. It is in the {price_range:s} price category and has an average rating of {average_rating:d}.[eos] (2) [user] What is the name of the hotel? [SEP] action: 98:hotel_inform_name [wizard] The hotel is called '{hotel_name:s}'.[eos] (3) [user] Where is the hotel located? [SEP] action: 138:hotel_inform_location [wizard] The hotel is {hotel_location:s}[eos] (4) [user] What is the rating of the hotel? [SEP] action: 111:hotel_inform_rating [wizard] The '{hotel_name:s}' has an average rating of {average_rating:d}[eos]",
    "dialog_examples": "history : [knowledgebase] [result] apiname = hotel_search ; averagerating = 5 ; cost = expensive ; location = center ; name = hyatt hotel ; service = true ; servicestarthour = 3 am ; servicestophour = 6 pm ; takesreservations = false ; id = 509 ; [sep] [wizard] the 'hyatt hotel' is in the expensive price range [sep] [user] perfect. what is it's rating? [sep]",
    "extra_ex": "user asks about rating. thus, the answer is",
    "explanation": "(4) [user] What is the rating of the hotel? [SEP] action: 111:hotel_inform_rating [wizard] The '{hotel_name:s}' has an average rating of {average_rating:d}[eos]"
  },
  {
    "domains": "hotel",
    "tasks": "hotel_service_request",
    "instructions": "wizard needs to collect the hotel name, user's name, room number, service request and service time sequentially from the user before conducting database querying.",
    "task_rules": "(1) [user] My request is [MESSAGE] [SEP] action: 24:hotel_ask_time [wizard] At what time would you like us to provide the service?[eos] (2) [user] [TIME] [SEP] action: 6:query[eos] (3) [user] [RESULT] APIName = hotel_service_request ; RequestStatus = Request Confirmed ; RoomNumber = [NUMBER] ; Time = [TIME] ;  [SEP] action: 25:hotel_inform_service_request_successful [wizard] Your request has been submitted successfully.\nA member of the service team will knock on the door of room {room_number:d} at {time:d} o'clock![eos] (4) [user] [RESULT] APIName = hotel_service_request ; RequestStatus = Request Failed ; RoomNumber = [NUMBER] ; Time = [TIME] ;  [SEP] action: 51:hotel_inform_service_request_failed [wizard] I am sorry to inform you that your request could not be processed at this time.[eos]",
    "dialog_examples": "history :[user] oops, forgot to mention that earlier - the shadyside inn [SEP] [wizard] right, please let us know your request now. [SEP] [user] yeah, i want to go ahead and schedule my lunch order - for 11am. cheeseburger, fries and two beers please [SEP]",
    "extra_ex": "hotel name is the shadyside inn, service request is lunch order, service time is 11am. thus, the answer is ",
    "explanation": "(2) [user] [TIME] [SEP] action: 6:query[eos]"
  },
  {
    "domains": "bank",
    "tasks": "bank_fraud_report",
    "instructions": "wizard needs to request the user's name, account number, PIN sequentially before querying.",
    "task_rules": "history :(1) [user] Hello. [SEP] action: 0:hello [wizard] Hello, how can I help?[eos] (2) [user] I'd like to submit a fraud report. [SEP] action: 2:ask_name [wizard] Could I get your full name, please?[eos] (3) [user] My name is [NAME] [SEP] action: 40:bank_ask_account_number [wizard] Can you tell me your account number, please?[eos] (4) [user] My account nubmer is [NUMBER] [SEP] action: 42:bank_ask_pin [wizard] Right, and your PIN as well please.[eos]",
    "dialog_examples": "[user] i was reviewing my online account information and somehow, $500 has been transferred from my account without my authorization. i don't even know this person! [SEP]",
    "extra_ex": "user describes a fraud transaction. thus, the answer is",
    "explanation": "(2) [user] I'd like to submit a fraud report. [SEP] action: 2:ask_name [wizard] Could I get your full name, please?[eos]"
  },
  {
    "domains": "plane",
    "tasks": "plane_book",
    "instructions": "wizard needs to collect the user's name, flight id sequentially from the user before conducting database querying.",
    "task_rules": "(1) [user] I'd like to reserve a flight [SEP] action: 2:ask_name [wizard] May I have your name, please?[eos] (2) [user] My name is [NAME] [SEP] action: 68:plane_ask_flight_id [wizard] Can I have your flight ID, please?[eos] (3) [user] My flight ID is [NUMBER] [SEP] action: 9:query_check[eos] (4) [user] my name is [NAME], My flight ID is [NUMBER] [SEP] action: 9:query_check[eos]",
    "dialog_examples": "history: [user] i would like to reserve flight id 631 [SEP] [wizard] may i have your name, please? [SEP] [user] mark [SEP]",
    "extra_ex": "user's name is mark, flight id is 631. thus, the answer is",
    "explanation": "(4) [user] my name is [NAME], My flight ID is [NUMBER] [SEP] action: 9:query_check[eos]"
  },
  {
    "domains": "apartment",
    "tasks": "apartment_search",
    "instructions": "wizard needs to request the number of bedrooms, the budget/the prefered price, the prefered floor, whether requiring the balcony /the balcony side, elavator and nearbyPOIs sequentially before querying.",
    "task_rules": "(1) [user] Hello. [SEP] action: 0:hello [wizard] Hello, how can I help?[eos] (2) [user] I need to find an apartment. [SEP] action: 112:apartment_ask_num_bedrooms [wizard] How many bedrooms does the apartment need to have?[eos] (3) [user] [NUMBER] bedrooms [SEP] action: 144:apartment_ask_price [wizard] What is your budget?[eos] (4) [user] $[NUMBER] [SEP] action: 152:apartment_ask_floor [wizard] Are you looking for an apartment on a specific floor?[eos]",
    "dialog_examples": "history: [user] hello i am looking for an apartment to rent. can you help me? [SEP]",
    "extra_ex": "user needs to find an apartment. thus, the answer is",
    "explanation": "(2) [user] I need to find an apartment. [SEP] action: 112:apartment_ask_num_bedrooms [wizard] How many bedrooms does the apartment need to have?[eos]"
  }
]